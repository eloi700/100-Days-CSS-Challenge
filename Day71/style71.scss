@import url('https://fonts.googleapis.com/css2?family=Frank+Ruhl+Libre:wght@400;500;700&display=swap');

*,*::before,*::after{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root{
    font-size: 10px;
    font-family: 'Frank Ruhl Libre', serif;
}

@mixin center{
    display: flex;
    justify-content: center;
    align-items: center;
}

$duration: 1s;

$characters: (
	a: '.-',
	b: '-...',
	c: '-.-.',
	d: '-..',
	e: '.',
	f: '..-.',
	g: '--.',
	h: '....',
	i: '..',
	j: '.---',
	k: '-.-',
	l: '.-..',
	m: '--',
	n: '-.',
	o: '---',
	p: '.--.',
	q: '--.-',
	r: '.-.',
	s: '...',
	t: '-',
	u: '..-',
	v: '...-',
	w: '.--',
	x: '-..-',
	y: '-.--',
	z: '--..',
	0: '-----',
	1: '.----',
	2: '..---',
	3: '...--',
	4: '....-',
	5: '.....',
	6: '-....',
	7: '--...',
	8: '---..',
	9: '----.',
);

@function lets-morse($character, $code) {
	$morse-animations: ();
	$animation-name: '';
	@for $i from 1 through str-length($code) {
		$morse-symbol: str-slice($code, $i, $i); // slice string into single characters
		@if ($morse-symbol == '.') {$animation-name: short-#{$character}-#{$i};} // assign animation name
		@if ($morse-symbol == '-') {$animation-name: long-#{$character}-#{$i};} // assign animation name
		$animation: $animation-name $duration ( ($i - 1) * $duration); // create animation
		$morse-animations : append($morse-animations, $animation, comma); // combine animations
	}
	@return $morse-animations;
}

body{
    @include center;
    min-height: 100vh;
}

.frame{
    position: relative;
    @include center;
    height: 40rem;
    width: 40rem;
    background: #000;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 0 0 0.1rem #000;

    &::after{
        position: absolute;
        content: '';
        top: 1rem;
        height: 21rem;
        width: 38rem;
        border: 0.2rem dashed crimson;
    }
}

.radio {
	display: none;
}

.triggers {
	position: absolute;
	bottom: 0;
	left: 0;
	background: rgba(255, 255, 255, 0.445);
	border-top: 2px solid #fff;
    border-radius: 0 0 0.5rem 0.5rem;
	padding: 5px 0;
    text-shadow: 0.1rem 0.1rem 0.2rem #000;
    font-weight: 700;
    user-select: none;

    #label-u, #label-v, #label-w, #label-x, #label-y, #label-z{
        left: calc(40rem - 18rem - 14rem);
        color: crimson;
        &:hover{
            background: #fff;
            text-shadow: 0.1rem 0.1rem 0.2rem #000;
            font-weight: 700;
        }
    }

    @for $x from 0 through 10{
        #label-#{$x}{
            color:  crimson;
            &:hover{
                background: #fff;
                text-shadow: 0.1rem 0.1rem 0.2rem #000;
                font-weight: 700;
            }
        }
    }
}

.trigger {
	position: relative;
	float: left;
	width: 3.4rem;
	height: 3.4rem;
	margin: 0.3rem;
	font-size: 1.6rem;
	line-height: 3.4rem;
	text-align: center;
    color: #fff;
	text-transform: uppercase;
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
	cursor: pointer;

	&:hover {
		background: crimson;
        text-shadow: 0.1rem 0.1rem 0.2rem #000;
        font-weight: 700;
        transition: 0.3s ease-in-out;
        transform: scale(1.2);
	}

}

.light {
	position: absolute;
	width: 4rem;
	height: 4rem;
	top: -13rem;
	left: 18.5rem ;
	border-radius: 50%;
	background: rgb(216, 216, 216);
	box-shadow: 0 0 5rem 0 #fff;
	opacity: 0;
	animation: none;
}

@each $character, $code in $characters {
	#morse-#{$character}:checked ~ .light {
		animation: lets-morse($character, $code);
	}
}

// animations for each character to fix a bug with reused animations in a row
@each $character, $code in $characters {
	@for $i from 1 through str-length($code) {
		$morse-symbol: str-slice($code, $i, $i); // slice string into single characters
		@if ($morse-symbol == '.') {
			@keyframes short-#{$character}-#{$i} {
				0%, 40%, 60%, 100% {
					opacity: 0;
				}
				41%, 59% {
					opacity: 1;
				}
			}
		}
		@if ($morse-symbol == '-') {
			@keyframes long-#{$character}-#{$i} {
				0%, 15%, 85%, 100% {
					opacity: 0;
				}
				16%, 84% {
					opacity: 1;
				}
			}	
		}
	}
}


@for $i from 1 through 5 {
	@keyframes short-#{$i} {
		0%, 40%, 60%, 100% {
			opacity: 0;
		}
		41%, 59% {
			opacity: 1;
		}
	}

	@keyframes long-#{$i} {
		0%, 15%, 85%, 100% {
			opacity: 0;
		}
		16%, 84% {
			opacity: 1;
		}
	}	
}

